import re

from dotenv import dotenv_values
from telebot.async_telebot import AsyncTeleBot

from api.rcon import RconServer 
from decorator.check_permission import CheckPermissionByWhitelist

config = dotenv_values(".env")

class Bot(AsyncTeleBot):
    def __init__(self):
        super().__init__(config.get("TELEGRAM_API_TOKEN"))

        host = config.get("RCON_HOST")
        port = config.get("RCON_PORT")
        password = config.get("RCON_PASSWORD")

        self._rconServer = RconServer(host, port, password)

    async def sendWelcom(self, message):
        await self.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç! üëãüòÉ")        

    async def getTPS(self, message):
        tps = self._rconServer.getTPS()

        tps = re.sub(r"¬ß.", "", tps)

        await self.send_message(message.chat.id, tps)

    async def getPlayers(self, message):
        list = self._rconServer.getPlayers()
        
        await self.send_message(message.chat.id, list)

    @CheckPermissionByWhitelist
    async def serverReload(self, message):
        self._rconServer.serverReload()
        await self.send_message(message.chat.id, f"üü¢ –°–µ—Ä–≤–µ—Ä —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω")

    @CheckPermissionByWhitelist
    async def teleport(self, message, targets: str, location: str):
        if targets is None:
            await self.send_message(message.chat.id, f"üî¥ –ù—É–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω—É–∂–Ω–æ —Ç–µ–ª–µ–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å!")
            return
        
        if location is None:
            await self.send_message(message.chat.id, f"üî¥ –ù—É–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫ –∫–æ—Ç–æ—Ä–æ–º—É –Ω—É–∂–Ω–æ —Ç–µ–ª–µ–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å")
            return
        
        self._rconServer.teleport(targets, location)

        await self.send_message(message.chat.id, f"üü¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {targets} —É—Å–ø–µ—à–Ω–æ —Ç–µ–ª–µ–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω –∫ {location}")

    @CheckPermissionByWhitelist
    async def kick(self, message, target: str, reasone: str | None):
        if target is None:
            await self.send_message(message.chat.id, f"üî¥ –ù—É–∂–Ω–æ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —É–∫–∞–∑–∞—Ç—å –Ω–∏–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!")
            return
        
        self._rconServer.kick(target, reasone)

        await self.send_message(message.chat.id, f"üü¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {target} —É—Å–ø–µ—à–Ω–æ –∫–∏–∫–Ω—É—Ç —Å —Å–µ—Ä–≤–µ—Ä–∞")
    
    @CheckPermissionByWhitelist
    async def ban(self, message, target: str, reasone: str | None):
        if target is None:
            await self.send_message(message.chat.id, f"üî¥ –ù—É–∂–Ω–æ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —É–∫–∞–∑–∞—Ç—å –Ω–∏–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!")
            return
        
        self._rconServer.ban(target, reasone)

        await self.send_message(message.chat.id, f"üü¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {target} —É—Å–ø–µ—à–Ω–æ –∑–∞–±–∞–Ω–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ")

    @CheckPermissionByWhitelist
    async def unban(self, message, target: str):
        if target is None:
            await self.send_message(message.chat.id, f"üî¥ –ù—É–∂–Ω–æ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —É–∫–∞–∑–∞—Ç—å –Ω–∏–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!")
            return
        
        self._rconServer.unban(target)

        await self.send_message(message.chat.id, f"üü¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {target} —É—Å–ø–µ—à–Ω–æ —Ä–∞–∑–±–∞–Ω–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ")